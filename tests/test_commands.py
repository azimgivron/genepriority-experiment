import pytest

from genepriority_experiment import (
    comparison_si,
    comparison_latent,
    comparison_flip_label,
    comparison_zero_sampling_factor,
    comparison_no_si,
    comparison_with_si,
)


def find_duplicates(seq):
    """
    Return a list of items that appear more than once in the sequence.
    """
    return [item for item in set(seq) if seq.count(item) > 1 and "--" in item]


@pytest.mark.parametrize(
    "gen_func",
    [
        comparison_si,
        comparison_latent,
        comparison_flip_label,
        comparison_zero_sampling_factor,
        comparison_no_si,
        comparison_with_si,
    ],
)
def test_no_duplicate_arguments(gen_func):
    """
    Ensure that each command generated by `gen_func` contains no duplicate arguments.
    """
    commands = gen_func()
    assert commands, f"Generator `{gen_func.__name__}` returned no commands."
    for cmd in commands:
        duplicates = find_duplicates(cmd)
        assert not duplicates, (
            f"Generator `{gen_func.__name__}` produced duplicate argument(s) "
            f"{duplicates} in command: {cmd}"
        )
